@model REORGCHART.Models.RegisterModel
@{
    /**/

    ViewBag.Title = "UserRegister";
    Layout = "~/Views/Shared/_LoginLayout.cshtml";
}

<style>
    .center {
        position: absolute;
        margin: auto;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        width: 300px;
        max-height: 480px;
        background-color: #ffffff;
        border-radius: 3px;
        border: 3px solid lightblue;
    }
</style>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
<div class="row">
    <div class="col-md-3 center">
        <h3 class="m-b-20 text-center" style="font-family:Roboto"><a onclick="javascript:ShowUsers(this);" href="javascript:void(0);">Add User Account</a></h3>
        <div id="divAddUser">
            <p style="color:red">@ViewBag.ErrorMessage</p>
            <div class="form-group m-b-20">
                <input class="form-control" id="UserName" name="UserName" placeholder="User Name" type="text" value="" />
                @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "text-danger" })
            </div>
            <div class="form-group m-b-20">
                <input class="form-control" id="CompanyName" name="CompanyName" placeholder="Company Name" type="text" value="" />
                @Html.ValidationMessageFor(m => m.CompanyName, "", new { @class = "text-danger" })
            </div>
            <div class="form-group m-b-20">
                <input class="form-control" id="Email" name="Email" placeholder="Email" type="text" value="" />
                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
            </div>
            <div class="form-group m-b-20">
                <input class="form-control" id="Password" name="Password" placeholder="Password" type="password" value="" />
                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
            </div>
            <div class="form-group m-b-20">
                <input class="form-control" id="ConfirmPassword" name="ConfirmPassword" placeholder="Confirm Password" type="password" value="" />
                @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
            <div class="form-group m-b-20">
                <input id="cbxUser" type="checkbox" name="cbxRoles" value="User">
                <label for="cbxUser" style="font: 14px 'Segoe UI', Helvetica, 'Droid Sans', Tahoma, Geneva, sans-serif;color: #666;margin-right:20px;">User</label>
                <input id="cbxAnalyzer" type="checkbox" name="cbxRoles" value="Player">
                <label for="cbxAnalyzer" style="font: 14px 'Segoe UI', Helvetica, 'Droid Sans', Tahoma, Geneva, sans-serif;color: #666;margin-right:20px;">OrgPlanner</label>
                <input id="cbxFinalyzer" type="checkbox" name="cbxRoles" value="Finalyzer">
                <label for="cbxFinalyzer" style="font: 14px 'Segoe UI', Helvetica, 'Droid Sans', Tahoma, Geneva, sans-serif;color: #666;margin-right:20px;">OrgAdmin</label>
                <input class="form-control" id="Roles" name="Roles" placeholder="Roles" type="hidden" value="" />
                @Html.ValidationMessageFor(m => m.Roles, "", new { @class = "text-danger" })
            </div>
            <div class="form-group m-b-20">
                <div>
                    <button onclick="UserRoles()" type="submit" class="form-control form-submit btn btn-info">Register</button>
                </div>
            </div>
        </div>
        <div id="divUsrList">
            @{
                ViewBag.Title = "Users List";
                <div>
                    @Html.Action("UserList", "Home")
                </div>
            }
        </div>
    </div>
</div>
}

<script type="text/javascript">
    $(document).ready(function () {
        $("#divUsrList").hide();
        $("#divAddUser").show();
    });

    function Userslist() {
        $("#divUsrList").hide();
        $("#divAddUser").show();
    }

    function AddUser() {
        $("#divUsrList").show();
        $("#divAddUser").hide();
    }

    function ShowUsers(Obj) {
        if ($(Obj).html() == "Add User Account") {
            AddUser();
            $(Obj).html("User List");
        }
        else if ($(Obj).html() == "User List") {
            Userslist();
            $(Obj).html("Add User Account");
        }
    }

    function UserRoles() {
       var Roles = "";
        if ($("#cbxUser").prop("checked")) Roles += ",User";
        if ($("#cbxAnalyzer").prop("checked")) Roles += ",Player";
        if ($("#cbxFinalyzer").prop("checked")) Roles += ",Finalyzer";
        if (Roles != "") Roles = Roles.substring(1);
        $("#Roles").val(Roles);
    }

</script>





